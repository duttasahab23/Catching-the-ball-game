package m1;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class CatchTheBall extends JPanel implements KeyListener,ActionListener,Runnable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	static boolean right = false;
	static boolean left = false;
	int ballx = 160;
	int bally = 210;
	int batx = 160;
	int baty = 245;
	int brick = 70;
	int bricky = 50;
	
	int brickBreadth = 30;
	int brickHeight = 20;
	Rectangle Ball = new Rectangle(ballx, bally,5,5);
	Rectangle Bat = new Rectangle(batx, baty,40,5);
	Rectangle [] Brick = new Rectangle[12];
	
	int movex = -1;
	int movey = -1;
	boolean ballFalldown = false;
	boolean bricksOver = false;
	int count = 0;
	String status;
	public boolean brickOver;
	public int brickx;
	
	CatchTheBall() {
		
	}
	
	public static void main(String[] args) {
		JFrame frame = new JFrame();
		CatchTheBall game = new CatchTheBall();
		JButton button = new JButton("restart");
		frame.setSize(350, 450);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		frame.add(game);
		frame.add(button, BorderLayout.SOUTH);
		frame.setLocationRelativeTo(null);
		frame.setResizable(false);
		frame.setVisible(true);
		frame.setTitle("Brick Breaker");
		button.addActionListener(game);
		
		game.addKeyListener(game);
		game.setFocusable(true);
		Thread t = new Thread(game);
		t.start();
		}
	
	public void paint(Graphics g) {
		g.setColor(Color.LIGHT_GRAY);
		g.fillRect(0, 0, 350, 450);
		g.setColor(Color.red);
		g.fillOval(Ball.x, Ball.y, Ball.width, Ball.height);
		g.setColor(Color.green);
		g.fill3DRect(Bat.x, Bat.y, Bat.width, Ball.height, ballFalldown);
		g.setColor(Color.black);
		g.fillRect(0,251,450,200);
		g.setColor(Color.red);
		g.drawRect(0,0,343,250);
		
		for(int i =0; i< Brick.length; i++) {
			if(Brick[i] != null) {
				g.fill3DRect(Brick[i].x, Brick[i].y, Brick[i].width, Brick[i].height, true);
				}
		}
		
		if (ballFalldown == true || brickOver == true) {
			Font f = new Font("Arial", Font.BOLD,20);
			g.setFont(f);
			g.drawString(status,70,120);
			boolean brickFallDown = false;
			brickOver = false;	
		}
	}
	
	public void run() {
		createBricks();
		while(true) {
			for(int i=0; i<Brick.length; i++) {
				if(Brick[i] != null) {
					if(Brick[i].intersects(Ball)) {
						Brick[i] = null;
						movey = -movey;
						count++;
					}
				}
			}
			
			if(count == Brick.length) {
				bricksOver = true;
				status = "YOU WON THE GAME";
				repaint();
			}
			repaint();
			Ball.x += movex;
			Ball.y += movey;
			
			if(left == true) {
				Bat.x -= 3;
				right = false;
			}
			if(right == true) {
				Bat.x += 3;
				left = false;
			}
			 
			if(Bat.x <= 4) {
				Bat.x = 4;
			}
			else if (Bat.x >= 300) {
				Bat.x = 300;
			}
			
			if (Ball.intersects(Bat)) {
				movey = -movey;
			}
			
			if(Ball.x <= 0 || Ball.x + Ball.height >= 343) {
				movex = -movex;
			}
			
			if(Ball.y <= 0) {
				movey = -movey;
			}
			
			if(Ball.y >= 250) {
				ballFalldown = true;
				status = "YOU LOST THE GAME";
				repaint();
			}
			
			try {
				Thread.sleep(10);
			}
			catch(Exception ex) {
				
			}
		
		}
	}

	public void createBricks() {
		
	}

	public void keyPressed(KeyEvent e) {
		int keyCode = e.getKeyCode();
		if (keyCode == KeyEvent.VK_LEFT) {
			left = true;
		}
		if (keyCode == KeyEvent.VK_RIGHT) {
			right = true;
		}
	}
	public void keyReleased(KeyEvent e) {
		int keyCode = e.getKeyCode();
		if (keyCode == KeyEvent.VK_LEFT) {
			left = false;
	}
		if (keyCode == KeyEvent.VK_RIGHT) {
			right = false;
		}
		}
	public void keyTyped(KeyEvent arg0) {
		
	}
	  public void actionPerformed(ActionEvent e) {
		  String str = e.getActionCommand();
		if(str.equals("restart")) {  
			this.restart();
	  }
	  }
	  	public void restart() {
	  		requestFocus(true);
	  		initilizeVariables();
	  		createBricks();
	  		repaint();
	  	}

		public void initilizeVariables() {
			ballx = 160;
			bally = 218;
			batx = 160;
			baty = 245;
		    int brickx = 70;
			bricky = 50;
			Ball = new Rectangle(ballx,bally,5,5);
			Bat = new Rectangle(batx,baty,40,5);
			Brick = new Rectangle[12];
			movex = -1;
			movey = -1;
			ballFalldown = false;
			brickOver = false;
			count = 0;
			status = null;
		}
		
		public void createBricks1() {
			for(int i = 0; i< Brick.length; i++) {
				Brick[i]= new Rectangle(brickx,bricky,brickBreadth,brickHeight);
				
				if(i==5) {
					brickx = 70;
					bricky = (bricky + brickHeight +2);
				}
				
				if(i==9) {
					brickx = 100;
					bricky = (bricky + brickHeight +2);
				}
				
				brickx += (brickBreadth+1);
			}
			
		}
	  	
}	  	
	

	
	
	
	
	
